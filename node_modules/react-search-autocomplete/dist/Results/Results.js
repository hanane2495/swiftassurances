"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Results;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _SearchIcon = require("../icons/SearchIcon");

var _StyledResults = require("./StyledResults");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function Results(props) {
  var results = props.results,
      onClick = props.onClick,
      setSearchString = props.setSearchString,
      showIcon = props.showIcon,
      maxResults = props.maxResults;

  var handleClick = function handleClick(result) {
    onClick(result);
    setSearchString(result.name);
  };

  if (results.length <= 0) {
    return null;
  }

  return /*#__PURE__*/_react["default"].createElement(_StyledResults.StyledResults, null, /*#__PURE__*/_react["default"].createElement("div", {
    className: "line"
  }), /*#__PURE__*/_react["default"].createElement("ul", null, results.slice(0, maxResults).map(function (result) {
    return /*#__PURE__*/_react["default"].createElement("li", {
      key: "rsa-result-".concat(result.id),
      onMouseDown: function onMouseDown() {
        return handleClick(result);
      },
      onClick: function onClick() {
        return handleClick(result);
      }
    }, showIcon && /*#__PURE__*/_react["default"].createElement("div", {
      className: "icon"
    }, /*#__PURE__*/_react["default"].createElement(_SearchIcon.SearchIcon, null)), /*#__PURE__*/_react["default"].createElement("div", {
      className: "ellipsis",
      title: result.name
    }, result.name));
  })));
}

Results.defaultProps = {
  results: [],
  setSearchString: function setSearchString() {}
};
Results.propTypes = {
  results: _propTypes["default"].array,
  onClick: _propTypes["default"].func,
  setSearchString: _propTypes["default"].func,
  showIcon: _propTypes["default"].bool,
  maxResults: _propTypes["default"].number
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9SZXN1bHRzL1Jlc3VsdHMuanMiXSwibmFtZXMiOlsiUmVzdWx0cyIsInByb3BzIiwicmVzdWx0cyIsIm9uQ2xpY2siLCJzZXRTZWFyY2hTdHJpbmciLCJzaG93SWNvbiIsIm1heFJlc3VsdHMiLCJoYW5kbGVDbGljayIsInJlc3VsdCIsIm5hbWUiLCJsZW5ndGgiLCJzbGljZSIsIm1hcCIsImlkIiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYXJyYXkiLCJmdW5jIiwiYm9vbCIsIm51bWJlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ2UsU0FBU0EsT0FBVCxDQUFpQkMsS0FBakIsRUFBd0I7QUFBQSxNQUM3QkMsT0FENkIsR0FDK0JELEtBRC9CLENBQzdCQyxPQUQ2QjtBQUFBLE1BQ3BCQyxPQURvQixHQUMrQkYsS0FEL0IsQ0FDcEJFLE9BRG9CO0FBQUEsTUFDWEMsZUFEVyxHQUMrQkgsS0FEL0IsQ0FDWEcsZUFEVztBQUFBLE1BQ01DLFFBRE4sR0FDK0JKLEtBRC9CLENBQ01JLFFBRE47QUFBQSxNQUNnQkMsVUFEaEIsR0FDK0JMLEtBRC9CLENBQ2dCSyxVQURoQjs7QUFHckMsTUFBTUMsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0MsTUFBRCxFQUFZO0FBQzlCTCxJQUFBQSxPQUFPLENBQUNLLE1BQUQsQ0FBUDtBQUNBSixJQUFBQSxlQUFlLENBQUNJLE1BQU0sQ0FBQ0MsSUFBUixDQUFmO0FBQ0QsR0FIRDs7QUFLQSxNQUFJUCxPQUFPLENBQUNRLE1BQVIsSUFBa0IsQ0FBdEIsRUFBeUI7QUFDdkIsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsc0JBQ0UsZ0NBQUMsNEJBQUQscUJBQ0U7QUFBSyxJQUFBLFNBQVMsRUFBQztBQUFmLElBREYsZUFFRSw0Q0FDR1IsT0FBTyxDQUFDUyxLQUFSLENBQWMsQ0FBZCxFQUFpQkwsVUFBakIsRUFBNkJNLEdBQTdCLENBQWlDLFVBQUNKLE1BQUQsRUFBWTtBQUM1Qyx3QkFDRTtBQUNFLE1BQUEsR0FBRyx1QkFBZ0JBLE1BQU0sQ0FBQ0ssRUFBdkIsQ0FETDtBQUVFLE1BQUEsV0FBVyxFQUFFO0FBQUEsZUFBTU4sV0FBVyxDQUFDQyxNQUFELENBQWpCO0FBQUEsT0FGZjtBQUdFLE1BQUEsT0FBTyxFQUFFO0FBQUEsZUFBTUQsV0FBVyxDQUFDQyxNQUFELENBQWpCO0FBQUE7QUFIWCxPQUtHSCxRQUFRLGlCQUNQO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixvQkFDRSxnQ0FBQyxzQkFBRCxPQURGLENBTkosZUFVRTtBQUFLLE1BQUEsU0FBUyxFQUFDLFVBQWY7QUFBMEIsTUFBQSxLQUFLLEVBQUVHLE1BQU0sQ0FBQ0M7QUFBeEMsT0FDR0QsTUFBTSxDQUFDQyxJQURWLENBVkYsQ0FERjtBQWdCRCxHQWpCQSxDQURILENBRkYsQ0FERjtBQXlCRDs7QUFFRFQsT0FBTyxDQUFDYyxZQUFSLEdBQXVCO0FBQ3JCWixFQUFBQSxPQUFPLEVBQUUsRUFEWTtBQUVyQkUsRUFBQUEsZUFBZSxFQUFFLDJCQUFNLENBQUU7QUFGSixDQUF2QjtBQUtBSixPQUFPLENBQUNlLFNBQVIsR0FBb0I7QUFDbEJiLEVBQUFBLE9BQU8sRUFBRWMsc0JBQVVDLEtBREQ7QUFFbEJkLEVBQUFBLE9BQU8sRUFBRWEsc0JBQVVFLElBRkQ7QUFHbEJkLEVBQUFBLGVBQWUsRUFBRVksc0JBQVVFLElBSFQ7QUFJbEJiLEVBQUFBLFFBQVEsRUFBRVcsc0JBQVVHLElBSkY7QUFLbEJiLEVBQUFBLFVBQVUsRUFBRVUsc0JBQVVJO0FBTEosQ0FBcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBTZWFyY2hJY29uIH0gZnJvbSAnLi4vaWNvbnMvU2VhcmNoSWNvbidcbmltcG9ydCB7IFN0eWxlZFJlc3VsdHMgfSBmcm9tICcuL1N0eWxlZFJlc3VsdHMnXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSZXN1bHRzKHByb3BzKSB7XG4gIGNvbnN0IHsgcmVzdWx0cywgb25DbGljaywgc2V0U2VhcmNoU3RyaW5nLCBzaG93SWNvbiwgbWF4UmVzdWx0cyB9ID0gcHJvcHNcblxuICBjb25zdCBoYW5kbGVDbGljayA9IChyZXN1bHQpID0+IHtcbiAgICBvbkNsaWNrKHJlc3VsdClcbiAgICBzZXRTZWFyY2hTdHJpbmcocmVzdWx0Lm5hbWUpXG4gIH1cblxuICBpZiAocmVzdWx0cy5sZW5ndGggPD0gMCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxTdHlsZWRSZXN1bHRzPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lXCIgLz5cbiAgICAgIDx1bD5cbiAgICAgICAge3Jlc3VsdHMuc2xpY2UoMCwgbWF4UmVzdWx0cykubWFwKChyZXN1bHQpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGxpXG4gICAgICAgICAgICAgIGtleT17YHJzYS1yZXN1bHQtJHtyZXN1bHQuaWR9YH1cbiAgICAgICAgICAgICAgb25Nb3VzZURvd249eygpID0+IGhhbmRsZUNsaWNrKHJlc3VsdCl9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZUNsaWNrKHJlc3VsdCl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtzaG93SWNvbiAmJiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpY29uXCI+XG4gICAgICAgICAgICAgICAgICA8U2VhcmNoSWNvbiAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVsbGlwc2lzXCIgdGl0bGU9e3Jlc3VsdC5uYW1lfT5cbiAgICAgICAgICAgICAgICB7cmVzdWx0Lm5hbWV9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICApXG4gICAgICAgIH0pfVxuICAgICAgPC91bD5cbiAgICA8L1N0eWxlZFJlc3VsdHM+XG4gIClcbn1cblxuUmVzdWx0cy5kZWZhdWx0UHJvcHMgPSB7XG4gIHJlc3VsdHM6IFtdLFxuICBzZXRTZWFyY2hTdHJpbmc6ICgpID0+IHt9XG59XG5cblJlc3VsdHMucHJvcFR5cGVzID0ge1xuICByZXN1bHRzOiBQcm9wVHlwZXMuYXJyYXksXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICBzZXRTZWFyY2hTdHJpbmc6IFByb3BUeXBlcy5mdW5jLFxuICBzaG93SWNvbjogUHJvcFR5cGVzLmJvb2wsXG4gIG1heFJlc3VsdHM6IFByb3BUeXBlcy5udW1iZXJcbn1cbiJdfQ==