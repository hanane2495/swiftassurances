{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Table/Table.jsx\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport \"./Table.css\";\n\nconst makeStyle = status => {\n  if (status === 'Dossier traité') {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green'\n    };\n  } else if (status === 'Refusé') {\n    return {\n      background: '#ffadad8f',\n      color: 'red'\n    };\n  } else {\n    return {\n      background: '#59bfff',\n      color: 'white'\n    };\n  }\n};\n\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#200752',\n      color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14\n    }\n  };\n});\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein, etat) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    etat\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 'En verification'), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Cupcake', 305, 3.7, 67, 4.3, 'A completer'), createData('Gingerbread', 356, 16.0, 49, 3.9, 'Dossier traité')];\nexport default function CustomizedTables() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Liste des demande\"), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: {\n      boxShadow: \"0px 13px 20px 0px #80808029\",\n      borderRadius: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 700\n    },\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Protein\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Statut\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, row.name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, row.fat), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, row.carbs), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, row.protein), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    style: makeStyle(row.etat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 20\n    }\n  }, row.etat))))))));\n}\n/**\n * const makeStyle=(status)=>{\n  if(status === 'Dossier traité')\n  {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green',\n    }\n  }\n  else if(status === 'Refusé')\n  {\n    return{\n      background: '#ffadad8f',\n      color: 'red',\n    }\n  }\n  else{\n    return{\n      background: '#59bfff',\n      color: 'white',\n    }\n  }\n}\nimport \"./Table.css\";\n\n<div className=\"Table\">\n      <h3>Liste des demande</h3>\n        <TableContainer\n          component={Paper}\n          style={{ boxShadow: \"0px 13px 20px 0px #80808029\", borderRadius:'20px' }}\n        >\n\n//use it \n<TableCell align=\"left\">\n                    <span className=\"status\" style={makeStyle(row.status)}>{row.status}</span>\n                  </TableCell>\n */","map":{"version":3,"sources":["/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Table/Table.jsx"],"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","makeStyle","status","background","color","StyledTableCell","theme","head","backgroundColor","palette","common","white","body","fontSize","StyledTableRow","action","hover","border","createData","name","calories","fat","carbs","protein","etat","rows","CustomizedTables","boxShadow","borderRadius","minWidth","map","row"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport \"./Table.css\";\n\nconst makeStyle=(status)=>{\n  if(status === 'Dossier traité')\n  {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green',\n    }\n  }\n  else if(status === 'Refusé')\n  {\n    return{\n      background: '#ffadad8f',\n      color: 'red',\n    }\n  }\n  else{\n    return{\n      background: '#59bfff',\n      color: 'white',\n    }\n  }\n}\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: '#200752',\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein, etat) {\n  return { name, calories, fat, carbs, protein, etat };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 'En verification'),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 'A completer'),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 'Dossier traité'),\n];\n\nexport default function CustomizedTables() {\n  return (\n    <div className=\"Table\">\n      <h3>Liste des demande</h3>\n      <TableContainer component={Paper} style={{ boxShadow: \"0px 13px 20px 0px #80808029\", borderRadius:'20px' }}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n              <StyledTableCell align=\"right\">Calories</StyledTableCell>\n              <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Statut</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                   <span className=\"status\" style={makeStyle(row.etat)}>{row.etat}</span>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\n\n\n\n/**\n * const makeStyle=(status)=>{\n  if(status === 'Dossier traité')\n  {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green',\n    }\n  }\n  else if(status === 'Refusé')\n  {\n    return{\n      background: '#ffadad8f',\n      color: 'red',\n    }\n  }\n  else{\n    return{\n      background: '#59bfff',\n      color: 'white',\n    }\n  }\n}\nimport \"./Table.css\";\n\n<div className=\"Table\">\n      <h3>Liste des demande</h3>\n        <TableContainer\n          component={Paper}\n          style={{ boxShadow: \"0px 13px 20px 0px #80808029\", borderRadius:'20px' }}\n        >\n\n//use it \n<TableCell align=\"left\">\n                    <span className=\"status\" style={makeStyle(row.status)}>{row.status}</span>\n                  </TableCell>\n */"]},"metadata":{},"sourceType":"module"}