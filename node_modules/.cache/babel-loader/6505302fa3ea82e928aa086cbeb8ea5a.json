{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Stepper/Stepper.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography'; //IMPORTING ICONS\n\nimport { FiSettings } from 'react-icons/fi';\nimport { HiUserGroup } from 'react-icons/hi';\nimport { MdVideoLibrary } from 'react-icons/md';\nimport { BsPersonCheck } from 'react-icons/bs';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector'; //STEPS CONNECTOR STYLING\n\nconst ColorlibConnector = styled(StepConnector)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n      top: 22\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: 'linear-gradient(45deg, rgba(181,143,255,1) 12%, rgba(128,131,194,1) 100%)'\n      }\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n      [`& .${stepConnectorClasses.line}`]: {\n        backgroundImage: 'linear-gradient(45deg, rgba(181,143,255,1) 12%, rgba(128,131,194,1) 100%)'\n      }\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n      height: 3,\n      border: 0,\n      backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n      borderRadius: 1\n    }\n  };\n}); //STEPS STYLING\n\nconst ColorlibStepIconRoot = styled('div')(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(ownerState.active && {\n      background: '#200752',\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    }),\n    ...(ownerState.completed && {\n      background: '#200752'\n    })\n  };\n}); //icon style\n\nconst IconStyle = {\n  color: '#0CDB0E'\n}; //CHINGING COLOR STEPS FUNCTION\n\nfunction ColorlibStepIcon(props) {\n  const {\n    active,\n    completed,\n    className\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(FiSettings, {\n      style: IconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(HiUserGroup, {\n      style: IconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(MdVideoLibrary, {\n      style: IconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    }),\n    4: /*#__PURE__*/React.createElement(BsPersonCheck, {\n      style: IconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(ColorlibStepIconRoot, {\n    ownerState: {\n      completed,\n      active\n    },\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n} //PROPTYPES\n\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n}; //STEPS\n\nconst steps = ['Select campaign settings', 'Create an ad group', 'Create an ad', 'Documents'];\n/**_________________________________________________________________________________________________________________________ */\n\nexport default function CustomizedSteppers() {\n  //MANAGING STEPS CHANGINGS ..................................................................................................\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Stack, {\n    sx: {\n      width: '100%'\n    },\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return /*#__PURE__*/React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n      StepIconComponent: ColorlibStepIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }), label));\n  })), activeStep === steps.length ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      mt: 2,\n      mb: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'row',\n      pt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flex: '1 1 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Reset\"))) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      mt: 2,\n      mb: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"Step \", activeStep + 1), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'row',\n      pt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    sx: {\n      mr: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flex: '1 1 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), isStepOptional(activeStep) && /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    onClick: handleSkip,\n    sx: {\n      mr: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, \"Skip\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next'))));\n}\n/**\n * \n\n\n\n\n          <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n */","map":{"version":3,"sources":["/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Stepper/Stepper.js"],"names":["React","PropTypes","styled","Stack","Box","Stepper","Step","StepLabel","Button","Typography","FiSettings","HiUserGroup","MdVideoLibrary","BsPersonCheck","StepConnector","stepConnectorClasses","ColorlibConnector","theme","alternativeLabel","top","active","line","backgroundImage","completed","height","border","backgroundColor","palette","mode","grey","borderRadius","ColorlibStepIconRoot","ownerState","zIndex","color","width","display","justifyContent","alignItems","background","boxShadow","IconStyle","ColorlibStepIcon","props","className","icons","String","icon","propTypes","bool","string","node","steps","CustomizedSteppers","activeStep","setActiveStep","useState","skipped","setSkipped","Set","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","labelProps","optional","length","mt","mb","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\n\n\n//IMPORTING ICONS\nimport {FiSettings} from 'react-icons/fi';\nimport {HiUserGroup} from 'react-icons/hi';\nimport {MdVideoLibrary} from 'react-icons/md';\nimport {BsPersonCheck} from 'react-icons/bs'\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\n\n\n//STEPS CONNECTOR STYLING\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 22,\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        'linear-gradient(45deg, rgba(181,143,255,1) 12%, rgba(128,131,194,1) 100%)',\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        'linear-gradient(45deg, rgba(181,143,255,1) 12%, rgba(128,131,194,1) 100%)',\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    height: 3,\n    border: 0,\n    backgroundColor:\n      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n    borderRadius: 1,\n  },\n}));\n\n//STEPS STYLING\nconst ColorlibStepIconRoot = styled('div')(({ theme, ownerState }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n  zIndex: 1,\n  color: '#fff',\n  width: 50,\n  height: 50,\n  display: 'flex',\n  borderRadius: '50%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(ownerState.active && {\n    background:'#200752',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  }),\n  ...(ownerState.completed && {\n    background:'#200752'\n  }),\n}));\n\n//icon style\nconst IconStyle = {\n  color:'#0CDB0E',\n}\n\n//CHINGING COLOR STEPS FUNCTION\nfunction ColorlibStepIcon(props) {\n  const { active, completed, className } = props;\n\n  const icons = {\n    1: <FiSettings style={IconStyle}/>,\n    2: <HiUserGroup style={IconStyle}/>,\n    3: <MdVideoLibrary style={IconStyle}/>,\n    4: <BsPersonCheck style={IconStyle}/>\n  };\n\n  return (\n    <ColorlibStepIconRoot ownerState={{ completed, active }} className={className}>\n      {icons[String(props.icon)]}\n    </ColorlibStepIconRoot>\n  );\n}\n\n\n//PROPTYPES\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\n\n//STEPS\nconst steps = ['Select campaign settings', 'Create an ad group', 'Create an ad', 'Documents'];\n\n\n\n/**_________________________________________________________________________________________________________________________ */\n\n\n\n\n\nexport default function CustomizedSteppers() {\n\n  //MANAGING STEPS CHANGINGS ..................................................................................................\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Stack sx={{ width: '100%' }} spacing={4}>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n        {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel \n                    {...labelProps}\n                    StepIconComponent={ColorlibStepIcon}\n                    >\n                  {label}\n                </StepLabel>\n              </Step>\n            );\n          })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Box sx={{ flex: '1 1 auto' }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Skip\n              </Button>\n            )}\n\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </Box>\n        </React.Fragment>\n      )}\n    </Stack>\n  );\n}\n\n\n/**\n * \n\n\n\n\n          <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n */"]},"metadata":{},"sourceType":"module"}