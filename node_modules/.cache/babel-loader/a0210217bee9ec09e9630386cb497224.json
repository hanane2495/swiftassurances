{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Table/TableTest.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport \"./Table.css\"; //icons\n\nimport IconButton from '@mui/material/IconButton';\nimport { AiOutlineVerticalRight } from 'react-icons/ai';\nimport { AiOutlineLeft } from 'react-icons/ai';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { AiOutlineVerticalLeft } from 'react-icons/ai';\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineVerticalLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineVerticalRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 66\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineVerticalRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineVerticalLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 67\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}; //styling etat butons\n\nconst makeStyle = status => {\n  if (status === 'Dossier traité') {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green'\n    };\n  } else if (status === 'Refusé') {\n    return {\n      background: '#ffadad8f',\n      color: 'red'\n    };\n  } else {\n    return {\n      background: '#59bfff',\n      color: 'white'\n    };\n  }\n}; //custom style stuff\n\n\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#200752',\n      color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14\n    }\n  };\n});\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein, etat) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    etat\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7, 4.6, 209, 'En verificatio'), createData('Donut', 452, 25.0, 37, 4.3, 'Dossier traité'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Frozen yoghurt', 159, 6.0, 67, 4.3, 'A completer'), createData('Gingerbread', 356, 16.0, 49, 3.9, 'Dossier traité'), createData('Honeycomb', 408, 3.2, 67, 4.3, 'A completer'), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'), createData('Jelly Bean', 375, 0.0, 24, 6.0, 'Refusé'), createData('KitKat', 518, 26.0, 49, 3.9, 'Dossier traité'), createData('Lollipop', 392, 0.2, 24, 6.0, 'Refusé'), createData('Marshmallow', 318, 0, 4.6, 209, 'En verificatio'), createData('Nougat', 360, 19.0, 67, 4.3, 'A completer'), createData('Oreo', 437, 18.0, 24, 6.0, 'Refusé')].sort((a, b) => a.calories < b.calories ? -1 : 1);\nexport default function CustomPaginationActionsTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); // Avoid a layout jump when reaching the last page with empty rows.\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 500\n    },\n    \"aria-label\": \"custom pagination table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Protein\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"Statut\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, row.name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, row.fat), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, row.carbs), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, row.protein), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    style: makeStyle(row.etat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 20\n    }\n  }, row.etat)))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Table/TableTest.js"],"names":["React","PropTypes","styled","useTheme","Box","Table","TableCell","tableCellClasses","TableBody","TableContainer","TableHead","TableFooter","TablePagination","TableRow","Paper","IconButton","AiOutlineVerticalRight","AiOutlineLeft","AiOutlineRight","AiOutlineVerticalLeft","TablePaginationActions","props","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","makeStyle","status","background","color","StyledTableCell","head","backgroundColor","palette","common","white","body","fontSize","StyledTableRow","action","hover","border","createData","name","calories","fat","carbs","protein","etat","rows","sort","a","b","CustomPaginationActionsTable","setPage","useState","setRowsPerPage","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","minWidth","slice","map","row","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport \"./Table.css\";\n\n\n//icons\nimport IconButton from '@mui/material/IconButton';\nimport {AiOutlineVerticalRight} from 'react-icons/ai';\nimport {AiOutlineLeft} from 'react-icons/ai';\nimport {AiOutlineRight} from 'react-icons/ai';\nimport {AiOutlineVerticalLeft} from 'react-icons/ai';\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineVerticalLeft /> : <AiOutlineVerticalRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineRight /> : <AiOutlineLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineLeft /> : <AiOutlineRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineVerticalRight /> : <AiOutlineVerticalLeft />}\n      </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n//styling etat butons\nconst makeStyle=(status)=>{\n    if(status === 'Dossier traité')\n    {\n      return {\n        background: 'rgb(145 254 159 / 47%)',\n        color: 'green',\n      }\n    }\n    else if(status === 'Refusé')\n    {\n      return{\n        background: '#ffadad8f',\n        color: 'red',\n      }\n    }\n    else{\n      return{\n        background: '#59bfff',\n        color: 'white',\n      }\n    }\n  }\n\n//custom style stuff\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#200752',\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n  \n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\nfunction createData(name, calories, fat, carbs, protein, etat) {\n    return { name, calories, fat, carbs, protein, etat };\n  }\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 4.6, 209, 'En verificatio'),\n  createData('Donut', 452, 25.0, 37, 4.3, 'Dossier traité' ),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Frozen yoghurt', 159, 6.0, 67, 4.3, 'A completer'),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 'Dossier traité'),\n  createData('Honeycomb', 408, 3.2, 67, 4.3, 'A completer'),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'),\n  createData('Jelly Bean', 375, 0.0, 24, 6.0, 'Refusé'),\n  createData('KitKat', 518, 26.0, 49, 3.9, 'Dossier traité'),\n  createData('Lollipop', 392, 0.2, 24, 6.0, 'Refusé'),\n  createData('Marshmallow', 318, 0, 4.6, 209, 'En verificatio'),\n  createData('Nougat', 360, 19.0, 67, 4.3, 'A completer'),\n  createData('Oreo', 437, 18.0, 24, 6.0, 'Refusé'),\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nexport default function CustomPaginationActionsTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n        <TableHead>\n            <TableRow>\n              <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n              <StyledTableCell align=\"right\">Calories</StyledTableCell>\n              <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Statut</StyledTableCell>\n            </TableRow>\n          </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">{row.name}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                   <span className=\"status\" style={makeStyle(row.etat)}>{row.etat}</span>\n                </StyledTableCell>\n              </StyledTableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}