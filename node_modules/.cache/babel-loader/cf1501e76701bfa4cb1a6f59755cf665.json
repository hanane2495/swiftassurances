{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Table/Table.jsx\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport \"./Table.css\"; //pagination\n\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination'; //icons\n\nimport IconButton from '@mui/material/IconButton';\nimport { AiOutlineVerticalRight } from 'react-icons/ai';\nimport { AiOutlineLeft } from 'react-icons/ai';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { AiOutlineVerticalLeft } from 'react-icons/ai'; //styling etat butons\n\nconst makeStyle = status => {\n  if (status === 'Dossier traité') {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green'\n    };\n  } else if (status === 'Refusé') {\n    return {\n      background: '#ffadad8f',\n      color: 'red'\n    };\n  } else {\n    return {\n      background: '#59bfff',\n      color: 'white'\n    };\n  }\n}; //pagination stuff\n\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineVerticalLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineVerticalRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, theme.direction === 'rtl' ? /*#__PURE__*/React.createElement(AiOutlineVerticalRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 38\n    }\n  }) : /*#__PURE__*/React.createElement(AiOutlineVerticalLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 67\n    }\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}; //custom style stuff\n\nconst StyledTableCell = styled(TableCell)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: '#200752',\n      color: theme.palette.common.white\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14\n    }\n  };\n});\nconst StyledTableRow = styled(TableRow)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein, etat) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    etat\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 'En verification'), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Cupcake', 305, 3.7, 67, 4.3, 'A completer'), createData('Gingerbread', 356, 16.0, 49, 3.9, 'Dossier traité'), createData('Cupcake', 305, 3.7, 67, 4.3, 'A completer'), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'), createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé')].sort((a, b) => a.calories < b.calories ? -1 : 1);\nexport default function CustomizedTables() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); // Avoid a layout jump when reaching the last page with empty rows.\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, \"Liste des demande\"), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: {\n      boxShadow: \"0px 13px 20px 0px #80808029\",\n      borderRadius: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 700\n    },\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Dessert (100g serving)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"Calories\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Fat\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Carbs\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Protein\\xA0(g)\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Statut\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, row.name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, row.fat), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, row.carbs), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, row.protein), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    style: makeStyle(row.etat),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 20\n    }\n  }, row.etat)))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }))))));\n}\n/**\n * const makeStyle=(status)=>{\n  if(status === 'Dossier traité')\n  {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green',\n    }\n  }\n  else if(status === 'Refusé')\n  {\n    return{\n      background: '#ffadad8f',\n      color: 'red',\n    }\n  }\n  else{\n    return{\n      background: '#59bfff',\n      color: 'white',\n    }\n  }\n}\nimport \"./Table.css\";\n\n<div className=\"Table\">\n      <h3>Liste des demande</h3>\n        <TableContainer\n          component={Paper}\n          style={{ boxShadow: \"0px 13px 20px 0px #80808029\", borderRadius:'20px' }}\n        >\n\n//use it \n<TableCell align=\"left\">\n                    <span className=\"status\" style={makeStyle(row.status)}>{row.status}</span>\n                  </TableCell>\n */","map":{"version":3,"sources":["/Users/pc/Documents/JSprojects /Swiftassurances/client/src/components/Dashboard.components/Table/Table.jsx"],"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","PropTypes","useTheme","Box","TableFooter","TablePagination","IconButton","AiOutlineVerticalRight","AiOutlineLeft","AiOutlineRight","AiOutlineVerticalLeft","makeStyle","status","background","color","TablePaginationActions","props","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","StyledTableCell","head","backgroundColor","palette","common","white","body","fontSize","StyledTableRow","action","hover","border","createData","name","calories","fat","carbs","protein","etat","rows","sort","a","b","CustomizedTables","setPage","useState","setRowsPerPage","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","boxShadow","borderRadius","minWidth","slice","map","row","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport \"./Table.css\";\n\n//pagination\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\n\n//icons\nimport IconButton from '@mui/material/IconButton';\nimport {AiOutlineVerticalRight} from 'react-icons/ai';\nimport {AiOutlineLeft} from 'react-icons/ai';\nimport {AiOutlineRight} from 'react-icons/ai';\nimport {AiOutlineVerticalLeft} from 'react-icons/ai';\n\n\n\n//styling etat butons\nconst makeStyle=(status)=>{\n  if(status === 'Dossier traité')\n  {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green',\n    }\n  }\n  else if(status === 'Refusé')\n  {\n    return{\n      background: '#ffadad8f',\n      color: 'red',\n    }\n  }\n  else{\n    return{\n      background: '#59bfff',\n      color: 'white',\n    }\n  }\n}\n\n//pagination stuff\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineVerticalLeft/> : <AiOutlineVerticalRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineRight /> : <AiOutlineLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineLeft /> : <AiOutlineRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <AiOutlineVerticalRight /> : <AiOutlineVerticalLeft/>}\n      </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\n//custom style stuff\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: '#200752',\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein, etat) {\n  return { name, calories, fat, carbs, protein, etat };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 'En verification'),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 'A completer'),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 'Dossier traité'),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 'A completer'),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 'Dossier traité'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n  createData('Eclair', 262, 16.0, 24, 6.0, 'Refusé'),\n\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\n\nexport default function CustomizedTables() {\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div className=\"Table\">\n      <h3>Liste des demande</h3>\n      <TableContainer component={Paper} style={{ boxShadow: \"0px 13px 20px 0px #80808029\", borderRadius:'20px' }}>\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n              <StyledTableCell align=\"right\">Calories</StyledTableCell>\n              <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n              <StyledTableCell align=\"right\">Statut</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows).map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">{row.name}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                   <span className=\"status\" style={makeStyle(row.etat)}>{row.etat}</span>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n            {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n            )}\n          </TableBody>\n\n          <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\n\n\n\n/**\n * const makeStyle=(status)=>{\n  if(status === 'Dossier traité')\n  {\n    return {\n      background: 'rgb(145 254 159 / 47%)',\n      color: 'green',\n    }\n  }\n  else if(status === 'Refusé')\n  {\n    return{\n      background: '#ffadad8f',\n      color: 'red',\n    }\n  }\n  else{\n    return{\n      background: '#59bfff',\n      color: 'white',\n    }\n  }\n}\nimport \"./Table.css\";\n\n<div className=\"Table\">\n      <h3>Liste des demande</h3>\n        <TableContainer\n          component={Paper}\n          style={{ boxShadow: \"0px 13px 20px 0px #80808029\", borderRadius:'20px' }}\n        >\n\n//use it \n<TableCell align=\"left\">\n                    <span className=\"status\" style={makeStyle(row.status)}>{row.status}</span>\n                  </TableCell>\n */"]},"metadata":{},"sourceType":"module"}