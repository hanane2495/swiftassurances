{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Documents/JSprojects /Swiftassurances/client/src/routes/PrivateRoutes.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //redux\n\nimport { useSelector } from 'react-redux';\nconst isLogged = useSelector(state => state.isLogged);\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLogged ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/pc/Documents/JSprojects /Swiftassurances/client/src/routes/PrivateRoutes.js"],"names":["React","Component","Route","Redirect","useSelector","isLogged","state","PrivateRoute","component","rest","props","pathname","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,MAAMC,QAAQ,GAAGD,WAAW,CAACE,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;;AAEA,MAAME,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEP,SAAb;AAAwB,OAAGQ;AAA3B,GAAD;AAAA,sBAEjB,oBAAC,KAAD,oBACQA,IADR;AAEI,IAAA,MAAM,EAAEC,KAAK,IACTL,QAAQ,gBACJ,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADI,gBAGJ,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAC,QAAAA,QAAQ,EAAE,GADV;AAEAL,QAAAA,KAAK,EAAE;AAAEM,UAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd;AAFP,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFiB;AAAA,CAArB;;AAmBA,eAAeN,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//redux\nimport {useSelector} from 'react-redux'\n\nconst isLogged = useSelector(state => state.isLogged)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    \n    <Route\n        {...rest}\n        render={props =>\n            isLogged ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/',\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    ></Route>\n);\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}